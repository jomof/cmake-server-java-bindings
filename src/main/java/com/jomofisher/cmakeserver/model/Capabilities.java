// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.1.0.proto

package com.jomofisher.cmakeserver.model;

/**
 * Protobuf type {@code Capabilities}
 */
public  final class Capabilities extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Capabilities)
    CapabilitiesOrBuilder {
  // Use Capabilities.newBuilder() to construct.
  private Capabilities(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Capabilities() {
    generators_ = java.util.Collections.emptyList();
    serverMode_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Capabilities(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              generators_ = new java.util.ArrayList<com.jomofisher.cmakeserver.model.Generator>();
              mutable_bitField0_ |= 0x00000001;
            }
            generators_.add(
                input.readMessage(com.jomofisher.cmakeserver.model.Generator.parser(), extensionRegistry));
            break;
          }
          case 16: {

            serverMode_ = input.readBool();
            break;
          }
          case 26: {
            com.jomofisher.cmakeserver.model.Version.Builder subBuilder = null;
            if (version_ != null) {
              subBuilder = version_.toBuilder();
            }
            version_ = input.readMessage(com.jomofisher.cmakeserver.model.Version.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(version_);
              version_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        generators_ = java.util.Collections.unmodifiableList(generators_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.jomofisher.cmakeserver.model.Messages10.internal_static_Capabilities_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.jomofisher.cmakeserver.model.Messages10.internal_static_Capabilities_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.jomofisher.cmakeserver.model.Capabilities.class, com.jomofisher.cmakeserver.model.Capabilities.Builder.class);
  }

  private int bitField0_;
  public static final int GENERATORS_FIELD_NUMBER = 1;
  private java.util.List<com.jomofisher.cmakeserver.model.Generator> generators_;
  /**
   * <code>repeated .Generator generators = 1;</code>
   */
  public java.util.List<com.jomofisher.cmakeserver.model.Generator> getGeneratorsList() {
    return generators_;
  }
  /**
   * <code>repeated .Generator generators = 1;</code>
   */
  public java.util.List<? extends com.jomofisher.cmakeserver.model.GeneratorOrBuilder> 
      getGeneratorsOrBuilderList() {
    return generators_;
  }
  /**
   * <code>repeated .Generator generators = 1;</code>
   */
  public int getGeneratorsCount() {
    return generators_.size();
  }
  /**
   * <code>repeated .Generator generators = 1;</code>
   */
  public com.jomofisher.cmakeserver.model.Generator getGenerators(int index) {
    return generators_.get(index);
  }
  /**
   * <code>repeated .Generator generators = 1;</code>
   */
  public com.jomofisher.cmakeserver.model.GeneratorOrBuilder getGeneratorsOrBuilder(
      int index) {
    return generators_.get(index);
  }

  public static final int SERVERMODE_FIELD_NUMBER = 2;
  private boolean serverMode_;
  /**
   * <code>optional bool serverMode = 2;</code>
   */
  public boolean getServerMode() {
    return serverMode_;
  }

  public static final int VERSION_FIELD_NUMBER = 3;
  private com.jomofisher.cmakeserver.model.Version version_;
  /**
   * <code>optional .Version version = 3;</code>
   */
  public boolean hasVersion() {
    return version_ != null;
  }
  /**
   * <code>optional .Version version = 3;</code>
   */
  public com.jomofisher.cmakeserver.model.Version getVersion() {
    return version_ == null ? com.jomofisher.cmakeserver.model.Version.getDefaultInstance() : version_;
  }
  /**
   * <code>optional .Version version = 3;</code>
   */
  public com.jomofisher.cmakeserver.model.VersionOrBuilder getVersionOrBuilder() {
    return getVersion();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < generators_.size(); i++) {
      output.writeMessage(1, generators_.get(i));
    }
    if (serverMode_ != false) {
      output.writeBool(2, serverMode_);
    }
    if (version_ != null) {
      output.writeMessage(3, getVersion());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < generators_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, generators_.get(i));
    }
    if (serverMode_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, serverMode_);
    }
    if (version_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getVersion());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.jomofisher.cmakeserver.model.Capabilities)) {
      return super.equals(obj);
    }
    com.jomofisher.cmakeserver.model.Capabilities other = (com.jomofisher.cmakeserver.model.Capabilities) obj;

    boolean result = true;
    result = result && getGeneratorsList()
        .equals(other.getGeneratorsList());
    result = result && (getServerMode()
        == other.getServerMode());
    result = result && (hasVersion() == other.hasVersion());
    if (hasVersion()) {
      result = result && getVersion()
          .equals(other.getVersion());
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (getGeneratorsCount() > 0) {
      hash = (37 * hash) + GENERATORS_FIELD_NUMBER;
      hash = (53 * hash) + getGeneratorsList().hashCode();
    }
    hash = (37 * hash) + SERVERMODE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getServerMode());
    if (hasVersion()) {
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.jomofisher.cmakeserver.model.Capabilities parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.jomofisher.cmakeserver.model.Capabilities parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.jomofisher.cmakeserver.model.Capabilities parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.jomofisher.cmakeserver.model.Capabilities parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.jomofisher.cmakeserver.model.Capabilities parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.jomofisher.cmakeserver.model.Capabilities parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.jomofisher.cmakeserver.model.Capabilities parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.jomofisher.cmakeserver.model.Capabilities parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.jomofisher.cmakeserver.model.Capabilities parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.jomofisher.cmakeserver.model.Capabilities parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.jomofisher.cmakeserver.model.Capabilities prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Capabilities}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Capabilities)
      com.jomofisher.cmakeserver.model.CapabilitiesOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.jomofisher.cmakeserver.model.Messages10.internal_static_Capabilities_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.jomofisher.cmakeserver.model.Messages10.internal_static_Capabilities_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.jomofisher.cmakeserver.model.Capabilities.class, com.jomofisher.cmakeserver.model.Capabilities.Builder.class);
    }

    // Construct using com.jomofisher.cmakeserver.model.Capabilities.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getGeneratorsFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (generatorsBuilder_ == null) {
        generators_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        generatorsBuilder_.clear();
      }
      serverMode_ = false;

      if (versionBuilder_ == null) {
        version_ = null;
      } else {
        version_ = null;
        versionBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.jomofisher.cmakeserver.model.Messages10.internal_static_Capabilities_descriptor;
    }

    public com.jomofisher.cmakeserver.model.Capabilities getDefaultInstanceForType() {
      return com.jomofisher.cmakeserver.model.Capabilities.getDefaultInstance();
    }

    public com.jomofisher.cmakeserver.model.Capabilities build() {
      com.jomofisher.cmakeserver.model.Capabilities result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.jomofisher.cmakeserver.model.Capabilities buildPartial() {
      com.jomofisher.cmakeserver.model.Capabilities result = new com.jomofisher.cmakeserver.model.Capabilities(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (generatorsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          generators_ = java.util.Collections.unmodifiableList(generators_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.generators_ = generators_;
      } else {
        result.generators_ = generatorsBuilder_.build();
      }
      result.serverMode_ = serverMode_;
      if (versionBuilder_ == null) {
        result.version_ = version_;
      } else {
        result.version_ = versionBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.jomofisher.cmakeserver.model.Capabilities) {
        return mergeFrom((com.jomofisher.cmakeserver.model.Capabilities)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.jomofisher.cmakeserver.model.Capabilities other) {
      if (other == com.jomofisher.cmakeserver.model.Capabilities.getDefaultInstance()) return this;
      if (generatorsBuilder_ == null) {
        if (!other.generators_.isEmpty()) {
          if (generators_.isEmpty()) {
            generators_ = other.generators_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureGeneratorsIsMutable();
            generators_.addAll(other.generators_);
          }
          onChanged();
        }
      } else {
        if (!other.generators_.isEmpty()) {
          if (generatorsBuilder_.isEmpty()) {
            generatorsBuilder_.dispose();
            generatorsBuilder_ = null;
            generators_ = other.generators_;
            bitField0_ = (bitField0_ & ~0x00000001);
            generatorsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getGeneratorsFieldBuilder() : null;
          } else {
            generatorsBuilder_.addAllMessages(other.generators_);
          }
        }
      }
      if (other.getServerMode() != false) {
        setServerMode(other.getServerMode());
      }
      if (other.hasVersion()) {
        mergeVersion(other.getVersion());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.jomofisher.cmakeserver.model.Capabilities parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.jomofisher.cmakeserver.model.Capabilities) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.jomofisher.cmakeserver.model.Generator> generators_ =
      java.util.Collections.emptyList();
    private void ensureGeneratorsIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        generators_ = new java.util.ArrayList<com.jomofisher.cmakeserver.model.Generator>(generators_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.jomofisher.cmakeserver.model.Generator, com.jomofisher.cmakeserver.model.Generator.Builder, com.jomofisher.cmakeserver.model.GeneratorOrBuilder> generatorsBuilder_;

    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public java.util.List<com.jomofisher.cmakeserver.model.Generator> getGeneratorsList() {
      if (generatorsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(generators_);
      } else {
        return generatorsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public int getGeneratorsCount() {
      if (generatorsBuilder_ == null) {
        return generators_.size();
      } else {
        return generatorsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public com.jomofisher.cmakeserver.model.Generator getGenerators(int index) {
      if (generatorsBuilder_ == null) {
        return generators_.get(index);
      } else {
        return generatorsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public Builder setGenerators(
        int index, com.jomofisher.cmakeserver.model.Generator value) {
      if (generatorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGeneratorsIsMutable();
        generators_.set(index, value);
        onChanged();
      } else {
        generatorsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public Builder setGenerators(
        int index, com.jomofisher.cmakeserver.model.Generator.Builder builderForValue) {
      if (generatorsBuilder_ == null) {
        ensureGeneratorsIsMutable();
        generators_.set(index, builderForValue.build());
        onChanged();
      } else {
        generatorsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public Builder addGenerators(com.jomofisher.cmakeserver.model.Generator value) {
      if (generatorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGeneratorsIsMutable();
        generators_.add(value);
        onChanged();
      } else {
        generatorsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public Builder addGenerators(
        int index, com.jomofisher.cmakeserver.model.Generator value) {
      if (generatorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGeneratorsIsMutable();
        generators_.add(index, value);
        onChanged();
      } else {
        generatorsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public Builder addGenerators(
        com.jomofisher.cmakeserver.model.Generator.Builder builderForValue) {
      if (generatorsBuilder_ == null) {
        ensureGeneratorsIsMutable();
        generators_.add(builderForValue.build());
        onChanged();
      } else {
        generatorsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public Builder addGenerators(
        int index, com.jomofisher.cmakeserver.model.Generator.Builder builderForValue) {
      if (generatorsBuilder_ == null) {
        ensureGeneratorsIsMutable();
        generators_.add(index, builderForValue.build());
        onChanged();
      } else {
        generatorsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public Builder addAllGenerators(
        java.lang.Iterable<? extends com.jomofisher.cmakeserver.model.Generator> values) {
      if (generatorsBuilder_ == null) {
        ensureGeneratorsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, generators_);
        onChanged();
      } else {
        generatorsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public Builder clearGenerators() {
      if (generatorsBuilder_ == null) {
        generators_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        generatorsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public Builder removeGenerators(int index) {
      if (generatorsBuilder_ == null) {
        ensureGeneratorsIsMutable();
        generators_.remove(index);
        onChanged();
      } else {
        generatorsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public com.jomofisher.cmakeserver.model.Generator.Builder getGeneratorsBuilder(
        int index) {
      return getGeneratorsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public com.jomofisher.cmakeserver.model.GeneratorOrBuilder getGeneratorsOrBuilder(
        int index) {
      if (generatorsBuilder_ == null) {
        return generators_.get(index);  } else {
        return generatorsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public java.util.List<? extends com.jomofisher.cmakeserver.model.GeneratorOrBuilder> 
         getGeneratorsOrBuilderList() {
      if (generatorsBuilder_ != null) {
        return generatorsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(generators_);
      }
    }
    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public com.jomofisher.cmakeserver.model.Generator.Builder addGeneratorsBuilder() {
      return getGeneratorsFieldBuilder().addBuilder(
          com.jomofisher.cmakeserver.model.Generator.getDefaultInstance());
    }
    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public com.jomofisher.cmakeserver.model.Generator.Builder addGeneratorsBuilder(
        int index) {
      return getGeneratorsFieldBuilder().addBuilder(
          index, com.jomofisher.cmakeserver.model.Generator.getDefaultInstance());
    }
    /**
     * <code>repeated .Generator generators = 1;</code>
     */
    public java.util.List<com.jomofisher.cmakeserver.model.Generator.Builder> 
         getGeneratorsBuilderList() {
      return getGeneratorsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.jomofisher.cmakeserver.model.Generator, com.jomofisher.cmakeserver.model.Generator.Builder, com.jomofisher.cmakeserver.model.GeneratorOrBuilder> 
        getGeneratorsFieldBuilder() {
      if (generatorsBuilder_ == null) {
        generatorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.jomofisher.cmakeserver.model.Generator, com.jomofisher.cmakeserver.model.Generator.Builder, com.jomofisher.cmakeserver.model.GeneratorOrBuilder>(
                generators_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        generators_ = null;
      }
      return generatorsBuilder_;
    }

    private boolean serverMode_ ;
    /**
     * <code>optional bool serverMode = 2;</code>
     */
    public boolean getServerMode() {
      return serverMode_;
    }
    /**
     * <code>optional bool serverMode = 2;</code>
     */
    public Builder setServerMode(boolean value) {
      
      serverMode_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool serverMode = 2;</code>
     */
    public Builder clearServerMode() {
      
      serverMode_ = false;
      onChanged();
      return this;
    }

    private com.jomofisher.cmakeserver.model.Version version_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.jomofisher.cmakeserver.model.Version, com.jomofisher.cmakeserver.model.Version.Builder, com.jomofisher.cmakeserver.model.VersionOrBuilder> versionBuilder_;
    /**
     * <code>optional .Version version = 3;</code>
     */
    public boolean hasVersion() {
      return versionBuilder_ != null || version_ != null;
    }
    /**
     * <code>optional .Version version = 3;</code>
     */
    public com.jomofisher.cmakeserver.model.Version getVersion() {
      if (versionBuilder_ == null) {
        return version_ == null ? com.jomofisher.cmakeserver.model.Version.getDefaultInstance() : version_;
      } else {
        return versionBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .Version version = 3;</code>
     */
    public Builder setVersion(com.jomofisher.cmakeserver.model.Version value) {
      if (versionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        version_ = value;
        onChanged();
      } else {
        versionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .Version version = 3;</code>
     */
    public Builder setVersion(
        com.jomofisher.cmakeserver.model.Version.Builder builderForValue) {
      if (versionBuilder_ == null) {
        version_ = builderForValue.build();
        onChanged();
      } else {
        versionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .Version version = 3;</code>
     */
    public Builder mergeVersion(com.jomofisher.cmakeserver.model.Version value) {
      if (versionBuilder_ == null) {
        if (version_ != null) {
          version_ =
            com.jomofisher.cmakeserver.model.Version.newBuilder(version_).mergeFrom(value).buildPartial();
        } else {
          version_ = value;
        }
        onChanged();
      } else {
        versionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .Version version = 3;</code>
     */
    public Builder clearVersion() {
      if (versionBuilder_ == null) {
        version_ = null;
        onChanged();
      } else {
        version_ = null;
        versionBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .Version version = 3;</code>
     */
    public com.jomofisher.cmakeserver.model.Version.Builder getVersionBuilder() {
      
      onChanged();
      return getVersionFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .Version version = 3;</code>
     */
    public com.jomofisher.cmakeserver.model.VersionOrBuilder getVersionOrBuilder() {
      if (versionBuilder_ != null) {
        return versionBuilder_.getMessageOrBuilder();
      } else {
        return version_ == null ?
            com.jomofisher.cmakeserver.model.Version.getDefaultInstance() : version_;
      }
    }
    /**
     * <code>optional .Version version = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.jomofisher.cmakeserver.model.Version, com.jomofisher.cmakeserver.model.Version.Builder, com.jomofisher.cmakeserver.model.VersionOrBuilder> 
        getVersionFieldBuilder() {
      if (versionBuilder_ == null) {
        versionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.jomofisher.cmakeserver.model.Version, com.jomofisher.cmakeserver.model.Version.Builder, com.jomofisher.cmakeserver.model.VersionOrBuilder>(
                getVersion(),
                getParentForChildren(),
                isClean());
        version_ = null;
      }
      return versionBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:Capabilities)
  }

  // @@protoc_insertion_point(class_scope:Capabilities)
  private static final com.jomofisher.cmakeserver.model.Capabilities DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.jomofisher.cmakeserver.model.Capabilities();
  }

  public static com.jomofisher.cmakeserver.model.Capabilities getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Capabilities>
      PARSER = new com.google.protobuf.AbstractParser<Capabilities>() {
    public Capabilities parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Capabilities(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Capabilities> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Capabilities> getParserForType() {
    return PARSER;
  }

  public com.jomofisher.cmakeserver.model.Capabilities getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

